name: Build and Push Docker Image

on:
  push:
    branches:
      - develop

env:
  IMAGE_NAME: mar97/node-k8s-app  
  IMAGE_VERSION: env.COMMIT_SHA

jobs:
  build_and_push:
    name: Build and Push to docker hub
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get commit SHA
        id: git_info
        run: echo "COMMIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      # Build the Docker image with the version tag
      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.COMMIT_SHA }} .

      # Push the Docker image to Docker Hub
      - name: Push Docker image with version tag
        run: docker push ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.COMMIT_SHA }}

      # Optionally tag it with 'latest' and push
      - name: Tag image with 'latest' and push
        run: |
          docker tag ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.COMMIT_SHA }} ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest

  trigger_deploy_pipeline:
    name: Trigger GitOps Deployment
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Get commit SHA to match the build job
      - name: Get commit SHA
        id: git_info
        run: echo "COMMIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Trigger GitOps repository workflow
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          repository: mohamedAhmed97/node-app-gitOps
          event-type: deploy-node-app
          client-payload: '{"image_name": "${{ env.IMAGE_NAME }}", "image_version": "${{ env.COMMIT_SHA }}", "docker_repo": "${{ secrets.DOCKER_USERNAME }}"}'